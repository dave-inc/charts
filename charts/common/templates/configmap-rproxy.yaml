{{- if .Values.canary.enabled -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "common.reverseProxyName" . }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
data:
  nginx.conf: |
    worker_processes auto;
    pid /tmp/nginx.pid;
    
    events {
      worker_connections 8192;
      multi_accept on;
      use epoll;
    }
    
    http {
      proxy_temp_path /tmp/proxy_temp;
      client_body_temp_path /tmp/client_temp;
      fastcgi_temp_path /tmp/fastcgi_temp;
      uwsgi_temp_path /tmp/uwsgi_temp;
      scgi_temp_path /tmp/scgi_temp;
      
      # Basic settings
      sendfile on;
      tcp_nopush on;
      tcp_nodelay on;
      keepalive_timeout 65;
      types_hash_max_size 2048;
      server_tokens off;
      client_max_body_size 50m;
      
      # Timeouts
      client_body_timeout 10;
      client_header_timeout 10;
      send_timeout 30;
      
      include /etc/nginx/mime.types;
      default_type application/octet-stream;
      
      access_log /dev/stdout;
      error_log /dev/stderr warn;
      
      gzip on;
      gzip_disable "msie6";
      gzip_vary on;
      gzip_proxied any;
      gzip_comp_level 6;
      gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
      
      # Define upstream servers with max_fails=0 to prevent circuit breaking
      upstream control {
        server ${NGINX_CONTROL_HOST} max_fails=0 fail_timeout=0;
        keepalive 32;
      }
      
      upstream canary {
        server ${NGINX_CANARY_HOST} max_fails=0 fail_timeout=0;
        keepalive 32;
      }
      
      # Split clients based on a hash of their IP address and User-Agent
      split_clients "${remote_addr}${http_user_agent}${date_gmt}" $upstream_group {
        ${NGINX_CONTROL_WEIGHT}% control;
        ${NGINX_CANARY_WEIGHT}% canary;
        * control;  # Default fallback
      }
      
      server {
        listen ${NGINX_LISTEN_PORT} default_server;
        server_name _;
        
        # Health check endpoint
        location = /__reverseProxy/ping {
          add_header Content-Type text/plain;
          return 200 'pong';
        }
        
        # Handle Google Health Checks based on user-agent
        if ($http_user_agent = "GoogleHC") {
          return 200 'pong';
        }
        
        # Route traffic based on the split_clients directive
        location / {
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header Connection "";
          proxy_http_version 1.1;
          
          # Timeouts configuration
          proxy_connect_timeout 5;
          proxy_send_timeout 30;
          proxy_read_timeout 30;
          
          # Buffer settings
          proxy_buffering on;
          proxy_buffer_size 8k;
          proxy_buffers 8 8k;
          
          # Add a header to indicate which upstream was chosen
          add_header X-Upstream-Group $upstream_group;
          
          # Proxy to the selected upstream
          proxy_pass http://$upstream_group;
        }
      }
    }
{{- end }}