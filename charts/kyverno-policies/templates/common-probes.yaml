{{- if .Values.policySets.common.enabled }}
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: probes
  namespace: {{ .Values.policySets.common.namespace }}
  annotations:
    policies.kyverno.io/title: Require Probes
    policies.kyverno.io/category: {{ .Values.policySets.common.probes.category }}
    policies.kyverno.io/severity: {{ .Values.policySets.common.probes.severity }}
    policies.kyverno.io/subject: Deployment
    policies.kyverno.io/description: >-
      Liveness and readiness probes need to be configured to correctly manage a Pod's
      lifecycle during deployments, restarts, and upgrades. For each Pod, a periodic
      `livenessProbe` is performed by the kubelet to determine if the Pod's containers
      are running or need to be restarted. A `readinessProbe` is used by Services
      and Deployments to determine if the Pod is ready to receive network traffic.
      A `startupProbe` is used to determine if a container is ready to accept traffic
      before the container is added to the service's endpoints.
spec:
  validationFailureAction: {{ .Values.policySets.common.probes.validationFailureAction }}
  background: true
  rules:
    - name: livenessprobe-application-required
      match:
        any:
        - resources:
            kinds:
            - Deployment
      exclude:
        {{ .Values.policySets.common.probes.exclude | toYaml | nindent 8 }}
      preconditions:
        all:
        - key: "{{`{{request.operation || 'BACKGROUND'}}`}}"
          operator: AnyIn
          value:
          - CREATE
          - UPDATE
      validate:
        message: "`livenessProbe` is required for application container"
        foreach:
        - list: "request.object.spec.template.spec.containers[?name != 'cloudsql-proxy']"
          deny:
            conditions:
              all:
              - key: livenessProbe
                operator: AllNotIn
                value: "{{`{{ element.keys(@)[] }}`}}"
    - name: livenessprobe-cloudsqlproxy-required
      match:
        any:
        - resources:
            kinds:
            - Deployment
      exclude:
        {{ .Values.policySets.common.probes.exclude | toYaml | nindent 8 }}
      validate:
        message: "`livenessProbe` is required for cloudsql-proxy container"
        foreach:
        - list: "request.object.spec.template.spec.containers[?name == 'cloudsql-proxy']"
          deny:
            conditions:
              all:
              - key: livenessProbe
                operator: AllNotIn
                value: "{{`{{ element.keys(@)[] }}`}}"

    - name: readinessprobe-application-required
      match:
        any:
        - resources:
            kinds:
            - Deployment
      exclude:
        {{ .Values.policySets.common.probes.exclude | toYaml | nindent 8 }}
      validate:
        message: "`readinessProbe` is required for application container"
        foreach:
        - list: "request.object.spec.template.spec.containers[?name != 'cloudsql-proxy']"
          deny:
            conditions:
              all:
              - key: readinessProbe
                operator: AllNotIn
                value: "{{`{{ element.keys(@)[] }}`}}"
    - name: readinessprobe-cloudsqlproxy-required
      match:
        any:
        - resources:
            kinds:
            - Deployment
      exclude:
        {{ .Values.policySets.common.probes.exclude | toYaml | nindent 8 }}
      validate:
        message: "`readinessProbe` is required for cloudsql-proxy container"
        foreach:
        - list: "request.object.spec.template.spec.containers[?name == 'cloudsql-proxy']"
          deny:
            conditions:
              all:
              - key: readinessProbe
                operator: AllNotIn
                value: "{{`{{ element.keys(@)[] }}`}}"

    - name: startupprobe-application-required
      match:
        any:
        - resources:
            kinds:
            - Deployment
      exclude:
        {{ .Values.policySets.common.probes.exclude | toYaml | nindent 8 }}
      validate:
        message: "`startupProbe` is required for application container"
        foreach:
        - list: "request.object.spec.template.spec.containers[?name != 'cloudsql-proxy']"
          deny:
            conditions:
              all:
              - key: startupProbe
                operator: AllNotIn
                value: "{{`{{ element.keys(@)[] }}`}}"
    - name: startupprobe-cloudsqlproxy-required
      match:
        any:
        - resources:
            kinds:
            - Deployment
      exclude:
        {{ .Values.policySets.common.probes.exclude | toYaml | nindent 8 }}
      validate:
        message: "`startupProbe` is required for cloudsql-proxy container"
        foreach:
        - list: "request.object.spec.template.spec.containers[?name == 'cloudsql-proxy']"
          deny:
            conditions:
              all:
              - key: startupProbe
                operator: AllNotIn
                value: "{{`{{ element.keys(@)[] }}`}}"
{{- end }}
