# Default values for common.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Used for NODE_ENV and DD_ENV
environment: staging
# Required: GCP Project where this Release will be deployed
project: ""

image:
  repository: nginx
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: latest

args: ""

# Add custom sidecar containers to main script runner
sidecars: []
# sidecars:
# - name: sidecar-1
#   image: alpine:latest
#   command: [sh, -c]
#   args: ["while true; do echo hello world!!!; sleep 10; done"]

serviceAccount:
  # At this moment all workflows run with this specific
  # Please don't change it until a version that supports custom service account is released
  name: workflows
  # Specifies whether a service account should be created
  # This flag will take no effect if SA is named workflows
  create: false
  # Annotations to add to the service account
  annotations: {}
  # IAM workload idenitity binding name
  # If not set and serviceAccount.create:true, a name is generated using Release.Name
  # If Release.Name is bigger than 30 characteres use this variable to overwrite it with something shorter to identify this workload
  workloadIdentitySA: ""
  # Specifies whether an existing service account will be used
  # Make sure you set serviceAccount.create:false when using this option
  # Dynamic environments will use of this one
  existingNameSA: ""

# You can add a cloudsql proxy template by enabling this option.
# This is similar to migrations detifnitions.
cloudsqlProxy:
  enabled: false
  port: ""
  instanceConnectionName: ""

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 200m
  #   memory: 256Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# Used for DD_TRACE_AGENT_HOSTNAME on DD APM/Node.js potentially can be used with logger vars too
apm:
  enabled: false
  # If datadogEnvironment is not defined we use variable environment as default
  datadogEnvironment: ""

# Default Logger and DD variables are defined here: https://github.com/dave-inc/charts/blob/master/common/templates/deployment.yaml
# Custom env variables are defined here and will be populated via Deployment's ConfigMap
env: {}

# ConfigMap
# The configMapName is optional, If not set, a name is generated using Release.Name
configMapName: ""
existingConfigMapName: ""

# To run workflows on speccifc tagged nodes
nodeSelector: {}
# nodeSelector:
#   node_pool: default

tolerations: []
# tolerations:
#   - effect: NoExecute
#     key: workload
#     operator: Equal
#     value: reserved-node
