{{- $namespaces := concat ( list .Release.Namespace ) ( keys .Values.devNamespaces ) -}}
{{- range $namespaces }}
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: tekton-pipeline-secrets
  namespace: {{ . }}
spec:
  refreshInterval: 10m
  secretStoreRef:
    kind: ClusterSecretStore
    name: tekton-secret-store
  target:
    name: tekton-ci-secrets
    creationPolicy: Owner
  data:
    {{- range $.Values.secrets.pipeline }}
    - secretKey: {{ .secret }}
      remoteRef:
        key: {{ .remoteKey }}
    {{- end }}
    {{- range $.Values.secrets.argo }}
    - secretKey: {{ . }}
      remoteRef:
        key: {{ . }}
    {{- end }}
#  dataFrom:
#  - extract:
#      key: github-creds  # json with username and password
#  - find:
#      name:
#        regexp: "^ci_" # regular ci creds i.e. sonar scanner
#  - find:
#      name:
#        regexp: "^argo_" # argo application tokens.
---
{{- end}}
