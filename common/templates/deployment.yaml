apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.name" . }}
  labels:
    tags.datadoghq.com/version: {{ .Values.image.tag }}
    {{- include "common.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "common.selectorLabels" . | nindent 6 }}
  strategy:
    {{- toYaml .Values.strategy | nindent 6 }}
  template:
    metadata:
      {{- include "common.podAnnotations" . | nindent 6 }}
      labels:
        tags.datadoghq.com/version: {{ .Values.image.tag }}
        {{- include "common.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ .Values.namespace }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      containers:
        - name: {{ include "common.name" . }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.deploymentContainer.port }}
              protocol: TCP
          {{- if .Values.deploymentContainer.livenessProbe.port }}
          livenessProbe:
            httpGet:
              path: {{ .Values.deploymentContainer.livenessProbe.path }}
              port: {{ .Values.deploymentContainer.livenessProbe.port | default ".Values.deploymentContainer.port" }}
            failureThreshold: {{ .Values.deploymentContainer.livenessProbe.failureThreshold }}
            initialDelaySeconds: {{ .Values.deploymentContainer.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.deploymentContainer.livenessProbe.periodSeconds }}
            successThreshold: {{ .Values.deploymentContainer.livenessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.deploymentContainer.livenessProbe.timeoutSeconds }}
          {{- end }}
          {{- if .Values.deploymentContainer.readinessProbe.port }}
          readinessProbe:
            httpGet:
              path: {{ .Values.deploymentContainer.readinessProbe.path }}
              port: {{ .Values.deploymentContainer.readinessProbe.port | default ".Values.deploymentContainer.port" }}
            failureThreshold: {{ .Values.deploymentContainer.readinessProbe.failureThreshold }}
            initialDelaySeconds: {{ .Values.deploymentContainer.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.deploymentContainer.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.deploymentContainer.readinessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.deploymentContainer.readinessProbe.timeoutSeconds }}
          {{- end }}
          {{- if .Values.resources }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          {{- if .Values.deploymentContainer.command }}
          command:
            {{- toYaml .Values.deploymentContainer.command | nindent 12 }}
          {{- end }}
          env:
            {{/*
            Environment variables used by the common logger
            https://github.com/dave-inc/logger/blob/6c69fe2cba9bb954494fe9c6b5297633c1a19aeb/README.md#L69
            */}}
            - name: DEPLOYMENT_NAME
              value: {{ include "common.name" . }}
            - name: DD_VERSION
              value: {{ .Values.image.tag }}
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NODE_ENV
              value: {{ .Values.environment }}
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          {{- if .Values.apm.enabled }}
            - name: DD_ENV
              value: {{ .Values.environment }}
            - name: DD_TRACE_AGENT_HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: DD_SERVICE_NAME
              value: {{ include "common.name" . }}
          {{- end }}
          envFrom:
            {{- if .Values.existingConfigMapName }}
            - configMapRef:
                name: {{ .Values.existingConfigMapName }}
            {{- end }}
            {{- if .Values.env }}
            - configMapRef:
                name: {{ .Values.configMapName | default (include "common.name" .) }}
            {{- end}}
            {{- if and (.Values.createSecret) (not .Values.createSecretName) }}
            - secretRef:
                name: {{ include "common.name" . }}
            {{- else if and (.Values.createSecret) (.Values.createSecretName) }}
            - secretRef:
                name: {{ .Values.createSecretName }}
            {{- else if and (.Values.existingSecretName) (not .Values.createSecret) }}
            - secretRef:
                name: {{ .Values.existingSecretName }}
            {{- else }}
            {{- end }}
          {{- if .Values.cloudsqlProxy.enabled }}
          volumeMounts:
            - name: {{ .Values.cloudsqlProxy.volume }}
              mountPath: /{{ .Values.cloudsqlProxy.volume }}
          {{- end }}

          {{- if .Values.cloudsqlProxy.enabled }}
        - name: {{ .Values.cloudsqlProxy.name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.cloudsqlProxy.image.repository }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.cloudsqlProxy.resources | nindent 12 }}
          {{- if .Values.cloudsqlProxy.command }}
          command:
            {{- toYaml .Values.cloudsqlProxy.command | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: {{ .Values.cloudsqlProxy.volume }}
              mountPath: /{{ .Values.cloudsqlProxy.volume }}
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/sh
                  - '-c'
                  - /bin/sleep 30
          {{- end }}

      {{- if .Values.cloudsqlProxy.enabled }}
      volumes:
        - name: {{ .Values.cloudsqlProxy.volume }}
          emptyDir: null
      {{- end }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
